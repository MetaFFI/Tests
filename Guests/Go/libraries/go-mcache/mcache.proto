syntax = "proto3";

// metaffi_target_language: "go"
// metaffi_function_path: "module=github.com/OrlovEvgeny/go-mcache"
service mcache
{
	// creates mcache. metaffi_function_path: "function=New"
	// metaffi_function_type: "constructor"
	rpc new (Void) returns (new_return);

	// set to mcache. metaffi_function_path: "function=Set,class=*CacheDriver"
	// metaffi_function_type: "method"
	rpc set (set_params) returns (Void);

	// get from mcache. metaffi_function_path: "function=Get,class=*CacheDriver"
	// metaffi_function_type: "method"
	rpc get (get_params) returns (get_return);
}

message Void{}
message new_return{	handle instance = 1; }

message set_params
{
	handle instance = 1;
	string key = 2;
	any obj = 3;
	int64 duration = 4; // metaffi_type_alias: "time.Duration"
}

message get_params{	handle instance = 1; string key = 2; }
message get_return{	any obj = 1; bool found = 2; }

