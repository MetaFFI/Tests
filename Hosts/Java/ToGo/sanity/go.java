
// Code generated by MetaFFI. DO NOT EDIT.
// Host code for {{.IDLFilenameWithExtension}}
package metaffi_host;

import java.io.*;
import java.util.*;
import metaffi.*;




// Code to call foreign functions in module go via MetaFFI

public final class go
{
	public static MetaFFIBridge metaffi;
	private static metaffi.MetaFFIBridge metaffiBridge = new metaffi.MetaFFIBridge();

	
	public static long GetFiveSecondsID = 0;
    
    

	
	public static long HelloWorldID = 0;
	
	public static long ReturnsAnErrorID = 0;
	
	public static long DivIntegersID = 0;
	
	public static long JoinStringsID = 0;
	
	public static long WaitABitID = 0;
	

	

	
	public static long TestMap_GetNameID = 0;
    public static long TestMap_SetNameID = 0;
	

	
	public static long TestMap_NewTestMapID = 0;
	

	
	public static long TestMap_ReleaseTestMapID = 0;
	

	
	public static long TestMap_SetID = 0;
	
	public static long TestMap_GetID = 0;
	
	public static long TestMap_ContainsID = 0;
	

	

	public static void load(String modulePath)
	{
		metaffi = new MetaFFIBridge();
		metaffi.load_runtime_plugin("xllr.go");

		
		GetFiveSecondsID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_GetFiveSeconds,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)0, (byte)1);
	    
	    

		
		HelloWorldID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_HelloWorld,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)0, (byte)0);
		
		ReturnsAnErrorID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_ReturnsAnError,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)0, (byte)0);
		
		DivIntegersID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_DivIntegers,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)2, (byte)1);
		
		JoinStringsID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_JoinStrings,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)1, (byte)1);
		
		WaitABitID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_WaitABit,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)1, (byte)1);
		

		

		
		TestMap_GetNameID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_TestMap_GetName,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)1, (byte)1);
	    TestMap_SetNameID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_TestMap_SetName,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)2, (byte)0);
		

		
		TestMap_NewTestMapID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_TestMap_NewTestMap,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)0, (byte)1);
		

		
		TestMap_ReleaseTestMapID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_TestMap_ReleaseTestMap,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)1, (byte)0);
		

		
		TestMap_SetID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_TestMap_Set,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)3, (byte)0);
		
		TestMap_GetID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_TestMap_Get,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)2, (byte)1);
		
		TestMap_ContainsID = metaffi.load_function("xllr.go", modulePath, "entrypoint_function=EntryPoint_TestMap_Contains,metaffi_guest_lib=TestFuncs_MetaFFIGuest,module=/mnt/c/src/github.com/MetaFFI/Tests/Hosts/Java/ToGo/sanity,package=TestFuncs", (byte)2, (byte)1);
		

		
	}

	
	
	
	
	
	public static long GetFiveSeconds( ) throws MetaFFIException
	{
		
		long xcall_params = metaffiBridge.alloc_cdts((byte)0, (byte)1);
		long return_valuesCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)0);


		

		metaffiBridge.xcall_no_params_ret(GetFiveSecondsID, xcall_params);


		return (long)metaffiBridge.cdts_to_java(return_valuesCDTS, 1)[0];
		
	}
	
	
	

	
	
	
	
	public static void HelloWorld( ) throws MetaFFIException
	{
		
		

		

		metaffiBridge.xcall_no_params_no_ret(HelloWorldID);


		
		
	}
	
	
	
	public static void ReturnsAnError( ) throws MetaFFIException
	{
		
		

		

		metaffiBridge.xcall_no_params_no_ret(ReturnsAnErrorID);


		
		
	}
	
	
	
	public static float DivIntegers( long x ,long y ) throws MetaFFIException
	{
		
		long xcall_params = metaffiBridge.alloc_cdts((byte)2, (byte)1);
		long parametersCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)0);
		long return_valuesCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)1);


		Object[] objectParams = new Object[]{ x, y };
		metaffiBridge.java_to_cdts(parametersCDTS, objectParams, new long[]{ 32, 32 });


		metaffiBridge.xcall_params_ret(DivIntegersID, xcall_params);


		return (float)metaffiBridge.cdts_to_java(return_valuesCDTS, 1)[0];
		
	}
	
	
	
	public static String JoinStrings( String[] arrs ) throws MetaFFIException
	{
		
		long xcall_params = metaffiBridge.alloc_cdts((byte)1, (byte)1);
		long parametersCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)0);
		long return_valuesCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)1);


		Object[] objectParams = new Object[]{ arrs };
		metaffiBridge.java_to_cdts(parametersCDTS, objectParams, new long[]{ 69632 });


		metaffiBridge.xcall_params_ret(JoinStringsID, xcall_params);


		return (String)metaffiBridge.cdts_to_java(return_valuesCDTS, 1)[0];
		
	}
	
	
	
	public static Object WaitABit( long d ) throws MetaFFIException
	{
		
		long xcall_params = metaffiBridge.alloc_cdts((byte)1, (byte)1);
		long parametersCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)0);
		long return_valuesCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)1);


		Object[] objectParams = new Object[]{ d };
		metaffiBridge.java_to_cdts(parametersCDTS, objectParams, new long[]{ 32 });


		metaffiBridge.xcall_params_ret(WaitABitID, xcall_params);


		return (Object)metaffiBridge.cdts_to_java(return_valuesCDTS, 1)[0];
		
	}
	
}

