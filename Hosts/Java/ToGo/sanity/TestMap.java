
// Code generated by MetaFFI. DO NOT EDIT.
// Host code for {{.IDLFilenameWithExtension}}
package metaffi_host;

import java.io.*;
import java.util.*;
import metaffi.*;



public class TestMap
{
	private metaffi.MetaFFIHandle this_instance;
	private static metaffi.MetaFFIBridge metaffiBridge = new metaffi.MetaFFIBridge();

	
	
	
	
	
	public String GetName( ) throws MetaFFIException
	{
		
		long xcall_params = metaffiBridge.alloc_cdts((byte)1, (byte)1);
		long parametersCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)0);
		long return_valuesCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)1);


		Object[] objectParams = new Object[]{ this_instance };
		metaffiBridge.java_to_cdts(parametersCDTS, objectParams, new long[]{ 32768 });


		
		metaffiBridge.xcall_params_ret(go.TestMap_GetNameID, xcall_params);


		return (String)metaffiBridge.cdts_to_java(return_valuesCDTS, 1)[0];
		
	}
	
	
	
	
	public void SetName( String Name ) throws MetaFFIException
	{
		
		long xcall_params = metaffiBridge.alloc_cdts((byte)2, (byte)0);
		long parametersCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)0);


		Object[] objectParams = new Object[]{ this_instance, Name };
		metaffiBridge.java_to_cdts(parametersCDTS, objectParams, new long[]{ 32768, 4096 });


		
		metaffiBridge.xcall_params_no_ret(go.TestMap_SetNameID, xcall_params);


		
	}
	
	

	
	
	public TestMap( ) throws MetaFFIException
	{
		long xcall_params = metaffiBridge.alloc_cdts((byte)0, (byte)1);
		long return_valuesCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)0);


		

		
		metaffiBridge.xcall_no_params_ret(go.TestMap_NewTestMapID, xcall_params);


		this.this_instance = (metaffi.MetaFFIHandle)metaffiBridge.cdts_to_java(return_valuesCDTS, 1)[0];
	}
	

	
	
	@Override
	public void finalize()
	{
		// TODO: Delete reference to the object in the objects table
	}
	


	
	
	
	public void Set( String k ,Object v ) throws MetaFFIException
	{
		
		long xcall_params = metaffiBridge.alloc_cdts((byte)3, (byte)0);
		long parametersCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)0);


		Object[] objectParams = new Object[]{ this_instance, k, v };
		metaffiBridge.java_to_cdts(parametersCDTS, objectParams, new long[]{ 32768, 4096, metaffiBridge.getMetaFFIType(v) });


		
		metaffiBridge.xcall_params_no_ret(go.TestMap_SetID, xcall_params);


		
	}
	
	
	
	public Object Get( String k ) throws MetaFFIException
	{
		
		long xcall_params = metaffiBridge.alloc_cdts((byte)2, (byte)1);
		long parametersCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)0);
		long return_valuesCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)1);


		Object[] objectParams = new Object[]{ this_instance, k };
		metaffiBridge.java_to_cdts(parametersCDTS, objectParams, new long[]{ 32768, 4096 });


		
		metaffiBridge.xcall_params_ret(go.TestMap_GetID, xcall_params);


		return (Object)metaffiBridge.cdts_to_java(return_valuesCDTS, 1)[0];
	}
	
	
	
	public boolean Contains( String k ) throws MetaFFIException
	{
		
		long xcall_params = metaffiBridge.alloc_cdts((byte)2, (byte)1);
		long parametersCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)0);
		long return_valuesCDTS = metaffiBridge.get_pcdt(xcall_params, (byte)1);


		Object[] objectParams = new Object[]{ this_instance, k };
		metaffiBridge.java_to_cdts(parametersCDTS, objectParams, new long[]{ 32768, 4096 });


		
		metaffiBridge.xcall_params_ret(go.TestMap_ContainsID, xcall_params);


		return (boolean)metaffiBridge.cdts_to_java(return_valuesCDTS, 1)[0];
	}
	
}
