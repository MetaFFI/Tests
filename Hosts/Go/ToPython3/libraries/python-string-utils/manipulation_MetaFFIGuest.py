
# Code generated by MetaFFI. Modify only in marked places.
# Guest code for manipulation.py

import traceback
import sys
import platform
import os
from typing import Any
from ctypes import *


import manipulation



python_plugin_handle = None
def load_python_plugin():
	global python_plugin_handle
	
	if python_plugin_handle == None:
		python_plugin_handle = cdll.LoadLibrary(get_filename_to_load('xllr.python3'))
		python_plugin_handle.set_entrypoint.argstype = [c_char_p, c_void_p]
		python_plugin_handle.xcall_params_ret.argstype = [py_object, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong)]
		python_plugin_handle.xcall_params_no_ret.argstype = [py_object, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong)]
		python_plugin_handle.xcall_no_params_ret.argstype = [py_object, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong)]
		python_plugin_handle.xcall_no_params_no_ret.argstype = [py_object, POINTER(c_char_p), POINTER(c_ulonglong)]

def get_filename_to_load(fname):
	osname = platform.system()
	if osname == 'Windows':
		return os.getenv('METAFFI_HOME')+'\\'+ fname + '.dll'
	elif osname == 'Darwin':
		return os.getenv('METAFFI_HOME')+'/' + fname + '.dylib'
	else:
		return os.getenv('METAFFI_HOME')+'/' + fname + '.so' # for everything that is not windows or mac, return .so

load_python_plugin()





@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetCAMEL_CASE_REPLACE_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetCAMEL_CASE_REPLACE_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetCAMEL_CASE_REPLACE_RE'.encode(), CEntryPoint_GetCAMEL_CASE_REPLACE_RE)

def EntryPoint_GetCAMEL_CASE_REPLACE_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.CAMEL_CASE_REPLACE_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetCAMEL_CASE_REPLACE_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetCAMEL_CASE_REPLACE_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetCAMEL_CASE_REPLACE_RE'.encode(), CEntryPoint_SetCAMEL_CASE_REPLACE_RE)

def EntryPoint_SetCAMEL_CASE_REPLACE_RE(val):
	ret_val_types = ()
	manipulation.CAMEL_CASE_REPLACE_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetCAMEL_CASE_TEST_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetCAMEL_CASE_TEST_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetCAMEL_CASE_TEST_RE'.encode(), CEntryPoint_GetCAMEL_CASE_TEST_RE)

def EntryPoint_GetCAMEL_CASE_TEST_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.CAMEL_CASE_TEST_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetCAMEL_CASE_TEST_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetCAMEL_CASE_TEST_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetCAMEL_CASE_TEST_RE'.encode(), CEntryPoint_SetCAMEL_CASE_TEST_RE)

def EntryPoint_SetCAMEL_CASE_TEST_RE(val):
	ret_val_types = ()
	manipulation.CAMEL_CASE_TEST_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetCREDIT_CARDS(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetCREDIT_CARDS), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetCREDIT_CARDS'.encode(), CEntryPoint_GetCREDIT_CARDS)

def EntryPoint_GetCREDIT_CARDS():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.CREDIT_CARDS)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetCREDIT_CARDS(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetCREDIT_CARDS), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetCREDIT_CARDS'.encode(), CEntryPoint_SetCREDIT_CARDS)

def EntryPoint_SetCREDIT_CARDS(val):
	ret_val_types = ()
	manipulation.CREDIT_CARDS = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetEMAILS_RAW_STRING(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetEMAILS_RAW_STRING), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetEMAILS_RAW_STRING'.encode(), CEntryPoint_GetEMAILS_RAW_STRING)

def EntryPoint_GetEMAILS_RAW_STRING():
	ret_val_types = (4096,)
	return (None, ret_val_types, manipulation.EMAILS_RAW_STRING)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetEMAILS_RAW_STRING(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetEMAILS_RAW_STRING), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetEMAILS_RAW_STRING'.encode(), CEntryPoint_SetEMAILS_RAW_STRING)

def EntryPoint_SetEMAILS_RAW_STRING(val):
	ret_val_types = ()
	manipulation.EMAILS_RAW_STRING = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetEMAILS_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetEMAILS_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetEMAILS_RE'.encode(), CEntryPoint_GetEMAILS_RE)

def EntryPoint_GetEMAILS_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.EMAILS_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetEMAILS_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetEMAILS_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetEMAILS_RE'.encode(), CEntryPoint_SetEMAILS_RE)

def EntryPoint_SetEMAILS_RE(val):
	ret_val_types = ()
	manipulation.EMAILS_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetEMAIL_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetEMAIL_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetEMAIL_RE'.encode(), CEntryPoint_GetEMAIL_RE)

def EntryPoint_GetEMAIL_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.EMAIL_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetEMAIL_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetEMAIL_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetEMAIL_RE'.encode(), CEntryPoint_SetEMAIL_RE)

def EntryPoint_SetEMAIL_RE(val):
	ret_val_types = ()
	manipulation.EMAIL_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetESCAPED_AT_SIGN(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetESCAPED_AT_SIGN), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetESCAPED_AT_SIGN'.encode(), CEntryPoint_GetESCAPED_AT_SIGN)

def EntryPoint_GetESCAPED_AT_SIGN():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.ESCAPED_AT_SIGN)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetESCAPED_AT_SIGN(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetESCAPED_AT_SIGN), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetESCAPED_AT_SIGN'.encode(), CEntryPoint_SetESCAPED_AT_SIGN)

def EntryPoint_SetESCAPED_AT_SIGN(val):
	ret_val_types = ()
	manipulation.ESCAPED_AT_SIGN = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetHTML_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetHTML_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetHTML_RE'.encode(), CEntryPoint_GetHTML_RE)

def EntryPoint_GetHTML_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.HTML_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetHTML_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetHTML_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetHTML_RE'.encode(), CEntryPoint_SetHTML_RE)

def EntryPoint_SetHTML_RE(val):
	ret_val_types = ()
	manipulation.HTML_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetHTML_TAG_ONLY_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetHTML_TAG_ONLY_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetHTML_TAG_ONLY_RE'.encode(), CEntryPoint_GetHTML_TAG_ONLY_RE)

def EntryPoint_GetHTML_TAG_ONLY_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.HTML_TAG_ONLY_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetHTML_TAG_ONLY_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetHTML_TAG_ONLY_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetHTML_TAG_ONLY_RE'.encode(), CEntryPoint_SetHTML_TAG_ONLY_RE)

def EntryPoint_SetHTML_TAG_ONLY_RE(val):
	ret_val_types = ()
	manipulation.HTML_TAG_ONLY_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetINSENSITIVE_LOCALE_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetINSENSITIVE_LOCALE_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetINSENSITIVE_LOCALE_RE'.encode(), CEntryPoint_GetINSENSITIVE_LOCALE_RE)

def EntryPoint_GetINSENSITIVE_LOCALE_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.INSENSITIVE_LOCALE_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetINSENSITIVE_LOCALE_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetINSENSITIVE_LOCALE_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetINSENSITIVE_LOCALE_RE'.encode(), CEntryPoint_SetINSENSITIVE_LOCALE_RE)

def EntryPoint_SetINSENSITIVE_LOCALE_RE(val):
	ret_val_types = ()
	manipulation.INSENSITIVE_LOCALE_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetIP_V6_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetIP_V6_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetIP_V6_RE'.encode(), CEntryPoint_GetIP_V6_RE)

def EntryPoint_GetIP_V6_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.IP_V6_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetIP_V6_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetIP_V6_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetIP_V6_RE'.encode(), CEntryPoint_SetIP_V6_RE)

def EntryPoint_SetIP_V6_RE(val):
	ret_val_types = ()
	manipulation.IP_V6_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetJSON_WRAPPER_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetJSON_WRAPPER_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetJSON_WRAPPER_RE'.encode(), CEntryPoint_GetJSON_WRAPPER_RE)

def EntryPoint_GetJSON_WRAPPER_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.JSON_WRAPPER_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetJSON_WRAPPER_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetJSON_WRAPPER_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetJSON_WRAPPER_RE'.encode(), CEntryPoint_SetJSON_WRAPPER_RE)

def EntryPoint_SetJSON_WRAPPER_RE(val):
	ret_val_types = ()
	manipulation.JSON_WRAPPER_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetLOCALE_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetLOCALE_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetLOCALE_RE'.encode(), CEntryPoint_GetLOCALE_RE)

def EntryPoint_GetLOCALE_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.LOCALE_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetLOCALE_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetLOCALE_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetLOCALE_RE'.encode(), CEntryPoint_SetLOCALE_RE)

def EntryPoint_SetLOCALE_RE(val):
	ret_val_types = ()
	manipulation.LOCALE_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetMARGIN_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetMARGIN_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetMARGIN_RE'.encode(), CEntryPoint_GetMARGIN_RE)

def EntryPoint_GetMARGIN_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.MARGIN_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetMARGIN_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetMARGIN_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetMARGIN_RE'.encode(), CEntryPoint_SetMARGIN_RE)

def EntryPoint_SetMARGIN_RE(val):
	ret_val_types = ()
	manipulation.MARGIN_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetNO_LETTERS_OR_NUMBERS_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetNO_LETTERS_OR_NUMBERS_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetNO_LETTERS_OR_NUMBERS_RE'.encode(), CEntryPoint_GetNO_LETTERS_OR_NUMBERS_RE)

def EntryPoint_GetNO_LETTERS_OR_NUMBERS_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.NO_LETTERS_OR_NUMBERS_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetNO_LETTERS_OR_NUMBERS_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetNO_LETTERS_OR_NUMBERS_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetNO_LETTERS_OR_NUMBERS_RE'.encode(), CEntryPoint_SetNO_LETTERS_OR_NUMBERS_RE)

def EntryPoint_SetNO_LETTERS_OR_NUMBERS_RE(val):
	ret_val_types = ()
	manipulation.NO_LETTERS_OR_NUMBERS_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetNUMBER_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetNUMBER_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetNUMBER_RE'.encode(), CEntryPoint_GetNUMBER_RE)

def EntryPoint_GetNUMBER_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.NUMBER_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetNUMBER_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetNUMBER_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetNUMBER_RE'.encode(), CEntryPoint_SetNUMBER_RE)

def EntryPoint_SetNUMBER_RE(val):
	ret_val_types = ()
	manipulation.NUMBER_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetPRETTIFY_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetPRETTIFY_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetPRETTIFY_RE'.encode(), CEntryPoint_GetPRETTIFY_RE)

def EntryPoint_GetPRETTIFY_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.PRETTIFY_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetPRETTIFY_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetPRETTIFY_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetPRETTIFY_RE'.encode(), CEntryPoint_SetPRETTIFY_RE)

def EntryPoint_SetPRETTIFY_RE(val):
	ret_val_types = ()
	manipulation.PRETTIFY_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetSHALLOW_IP_V4_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetSHALLOW_IP_V4_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetSHALLOW_IP_V4_RE'.encode(), CEntryPoint_GetSHALLOW_IP_V4_RE)

def EntryPoint_GetSHALLOW_IP_V4_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.SHALLOW_IP_V4_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetSHALLOW_IP_V4_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetSHALLOW_IP_V4_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetSHALLOW_IP_V4_RE'.encode(), CEntryPoint_SetSHALLOW_IP_V4_RE)

def EntryPoint_SetSHALLOW_IP_V4_RE(val):
	ret_val_types = ()
	manipulation.SHALLOW_IP_V4_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetSNAKE_CASE_REPLACE_DASH_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetSNAKE_CASE_REPLACE_DASH_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetSNAKE_CASE_REPLACE_DASH_RE'.encode(), CEntryPoint_GetSNAKE_CASE_REPLACE_DASH_RE)

def EntryPoint_GetSNAKE_CASE_REPLACE_DASH_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.SNAKE_CASE_REPLACE_DASH_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetSNAKE_CASE_REPLACE_DASH_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetSNAKE_CASE_REPLACE_DASH_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetSNAKE_CASE_REPLACE_DASH_RE'.encode(), CEntryPoint_SetSNAKE_CASE_REPLACE_DASH_RE)

def EntryPoint_SetSNAKE_CASE_REPLACE_DASH_RE(val):
	ret_val_types = ()
	manipulation.SNAKE_CASE_REPLACE_DASH_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetSNAKE_CASE_REPLACE_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetSNAKE_CASE_REPLACE_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetSNAKE_CASE_REPLACE_RE'.encode(), CEntryPoint_GetSNAKE_CASE_REPLACE_RE)

def EntryPoint_GetSNAKE_CASE_REPLACE_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.SNAKE_CASE_REPLACE_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetSNAKE_CASE_REPLACE_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetSNAKE_CASE_REPLACE_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetSNAKE_CASE_REPLACE_RE'.encode(), CEntryPoint_SetSNAKE_CASE_REPLACE_RE)

def EntryPoint_SetSNAKE_CASE_REPLACE_RE(val):
	ret_val_types = ()
	manipulation.SNAKE_CASE_REPLACE_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetSNAKE_CASE_TEST_DASH_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetSNAKE_CASE_TEST_DASH_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetSNAKE_CASE_TEST_DASH_RE'.encode(), CEntryPoint_GetSNAKE_CASE_TEST_DASH_RE)

def EntryPoint_GetSNAKE_CASE_TEST_DASH_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.SNAKE_CASE_TEST_DASH_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetSNAKE_CASE_TEST_DASH_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetSNAKE_CASE_TEST_DASH_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetSNAKE_CASE_TEST_DASH_RE'.encode(), CEntryPoint_SetSNAKE_CASE_TEST_DASH_RE)

def EntryPoint_SetSNAKE_CASE_TEST_DASH_RE(val):
	ret_val_types = ()
	manipulation.SNAKE_CASE_TEST_DASH_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetSNAKE_CASE_TEST_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetSNAKE_CASE_TEST_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetSNAKE_CASE_TEST_RE'.encode(), CEntryPoint_GetSNAKE_CASE_TEST_RE)

def EntryPoint_GetSNAKE_CASE_TEST_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.SNAKE_CASE_TEST_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetSNAKE_CASE_TEST_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetSNAKE_CASE_TEST_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetSNAKE_CASE_TEST_RE'.encode(), CEntryPoint_SetSNAKE_CASE_TEST_RE)

def EntryPoint_SetSNAKE_CASE_TEST_RE(val):
	ret_val_types = ()
	manipulation.SNAKE_CASE_TEST_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetSPACES_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetSPACES_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetSPACES_RE'.encode(), CEntryPoint_GetSPACES_RE)

def EntryPoint_GetSPACES_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.SPACES_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetSPACES_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetSPACES_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetSPACES_RE'.encode(), CEntryPoint_SetSPACES_RE)

def EntryPoint_SetSPACES_RE(val):
	ret_val_types = ()
	manipulation.SPACES_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetURLS_RAW_STRING(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetURLS_RAW_STRING), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetURLS_RAW_STRING'.encode(), CEntryPoint_GetURLS_RAW_STRING)

def EntryPoint_GetURLS_RAW_STRING():
	ret_val_types = (4096,)
	return (None, ret_val_types, manipulation.URLS_RAW_STRING)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetURLS_RAW_STRING(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetURLS_RAW_STRING), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetURLS_RAW_STRING'.encode(), CEntryPoint_SetURLS_RAW_STRING)

def EntryPoint_SetURLS_RAW_STRING(val):
	ret_val_types = ()
	manipulation.URLS_RAW_STRING = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetURLS_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetURLS_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetURLS_RE'.encode(), CEntryPoint_GetURLS_RE)

def EntryPoint_GetURLS_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.URLS_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetURLS_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetURLS_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetURLS_RE'.encode(), CEntryPoint_SetURLS_RE)

def EntryPoint_SetURLS_RE(val):
	ret_val_types = ()
	manipulation.URLS_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetURL_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetURL_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetURL_RE'.encode(), CEntryPoint_GetURL_RE)

def EntryPoint_GetURL_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.URL_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetURL_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetURL_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetURL_RE'.encode(), CEntryPoint_SetURL_RE)

def EntryPoint_SetURL_RE(val):
	ret_val_types = ()
	manipulation.URL_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetUUID_HEX_OK_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetUUID_HEX_OK_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetUUID_HEX_OK_RE'.encode(), CEntryPoint_GetUUID_HEX_OK_RE)

def EntryPoint_GetUUID_HEX_OK_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.UUID_HEX_OK_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetUUID_HEX_OK_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetUUID_HEX_OK_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetUUID_HEX_OK_RE'.encode(), CEntryPoint_SetUUID_HEX_OK_RE)

def EntryPoint_SetUUID_HEX_OK_RE(val):
	ret_val_types = ()
	manipulation.UUID_HEX_OK_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetUUID_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetUUID_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetUUID_RE'.encode(), CEntryPoint_GetUUID_RE)

def EntryPoint_GetUUID_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.UUID_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetUUID_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetUUID_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetUUID_RE'.encode(), CEntryPoint_SetUUID_RE)

def EntryPoint_SetUUID_RE(val):
	ret_val_types = ()
	manipulation.UUID_RE = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetUnion(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetUnion), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetUnion'.encode(), CEntryPoint_GetUnion)

def EntryPoint_GetUnion():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.Union)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetUnion(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetUnion), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetUnion'.encode(), CEntryPoint_SetUnion)

def EntryPoint_SetUnion(val):
	ret_val_types = ()
	manipulation.Union = val
	return (None, ret_val_types)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_GetWORDS_COUNT_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_GetWORDS_COUNT_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_GetWORDS_COUNT_RE'.encode(), CEntryPoint_GetWORDS_COUNT_RE)

def EntryPoint_GetWORDS_COUNT_RE():
	ret_val_types = (32768,)
	return (None, ret_val_types, manipulation.WORDS_COUNT_RE)



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_SetWORDS_COUNT_RE(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_SetWORDS_COUNT_RE), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_SetWORDS_COUNT_RE'.encode(), CEntryPoint_SetWORDS_COUNT_RE)

def EntryPoint_SetWORDS_COUNT_RE(val):
	ret_val_types = ()
	manipulation.WORDS_COUNT_RE = val
	return (None, ret_val_types)






# Call to foreign asciify
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_asciify(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_asciify), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_asciify'.encode(), CEntryPoint_asciify)

def EntryPoint_asciify(input_string):
	try:
		# call function
		ret_0 = manipulation.asciify(input_string)
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign booleanize
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_booleanize(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_booleanize), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_booleanize'.encode(), CEntryPoint_booleanize)

def EntryPoint_booleanize(input_string):
	try:
		# call function
		ret_0 = manipulation.booleanize(input_string)
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign camel_case_to_snake
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_camel_case_to_snake(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_camel_case_to_snake), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_camel_case_to_snake'.encode(), CEntryPoint_camel_case_to_snake)

def EntryPoint_camel_case_to_snake(input_string,separator):
	try:
		# call function
		ret_0 = manipulation.camel_case_to_snake(input_string,separator)
		
		ret_val_types = (4194304,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign compress
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_compress(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_compress), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_compress'.encode(), CEntryPoint_compress)

def EntryPoint_compress(input_string,encoding,compression_level):
	try:
		# call function
		ret_0 = manipulation.compress(input_string,encoding,compression_level)
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign decompress
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_decompress(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_decompress), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_decompress'.encode(), CEntryPoint_decompress)

def EntryPoint_decompress(input_string,encoding):
	try:
		# call function
		ret_0 = manipulation.decompress(input_string,encoding)
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign is_camel_case
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_is_camel_case(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_is_camel_case), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_is_camel_case'.encode(), CEntryPoint_is_camel_case)

def EntryPoint_is_camel_case(input_string):
	try:
		# call function
		ret_0 = manipulation.is_camel_case(input_string)
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign is_full_string
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_is_full_string(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_is_full_string), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_is_full_string'.encode(), CEntryPoint_is_full_string)

def EntryPoint_is_full_string(input_string):
	try:
		# call function
		ret_0 = manipulation.is_full_string(input_string)
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign is_integer
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_is_integer(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_is_integer), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_is_integer'.encode(), CEntryPoint_is_integer)

def EntryPoint_is_integer(input_string):
	try:
		# call function
		ret_0 = manipulation.is_integer(input_string)
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign is_snake_case
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_is_snake_case(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_is_snake_case), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_is_snake_case'.encode(), CEntryPoint_is_snake_case)

def EntryPoint_is_snake_case(input_string,separator):
	try:
		# call function
		ret_0 = manipulation.is_snake_case(input_string,separator)
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign is_string
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_is_string(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_is_string), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_is_string'.encode(), CEntryPoint_is_string)

def EntryPoint_is_string(obj):
	try:
		# call function
		ret_0 = manipulation.is_string(obj)
		
		ret_val_types = (1024,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign prettify
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_prettify(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_prettify), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_prettify'.encode(), CEntryPoint_prettify)

def EntryPoint_prettify(input_string):
	try:
		# call function
		ret_0 = manipulation.prettify(input_string)
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign reverse
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_reverse(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_reverse), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_reverse'.encode(), CEntryPoint_reverse)

def EntryPoint_reverse(input_string):
	try:
		# call function
		ret_0 = manipulation.reverse(input_string)
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign roman_decode
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_roman_decode(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_roman_decode), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_roman_decode'.encode(), CEntryPoint_roman_decode)

def EntryPoint_roman_decode(input_string):
	try:
		# call function
		ret_0 = manipulation.roman_decode(input_string)
		
		ret_val_types = (32,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign roman_encode
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_roman_encode(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_roman_encode), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_roman_encode'.encode(), CEntryPoint_roman_encode)

def EntryPoint_roman_encode(input_number):
	try:
		# call function
		ret_0 = manipulation.roman_encode(input_number)
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign shuffle
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_shuffle(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_shuffle), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_shuffle'.encode(), CEntryPoint_shuffle)

def EntryPoint_shuffle(input_string):
	try:
		# call function
		ret_0 = manipulation.shuffle(input_string)
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign slugify
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_slugify(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_slugify), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_slugify'.encode(), CEntryPoint_slugify)

def EntryPoint_slugify(input_string,separator):
	try:
		# call function
		ret_0 = manipulation.slugify(input_string,separator)
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign snake_case_to_camel
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_snake_case_to_camel(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_snake_case_to_camel), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_snake_case_to_camel'.encode(), CEntryPoint_snake_case_to_camel)

def EntryPoint_snake_case_to_camel(input_string,upper_case_first,separator):
	try:
		# call function
		ret_0 = manipulation.snake_case_to_camel(input_string,upper_case_first,separator)
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign strip_html
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_strip_html(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_strip_html), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_strip_html'.encode(), CEntryPoint_strip_html)

def EntryPoint_strip_html(input_string,keep_tag_content):
	try:
		# call function
		ret_0 = manipulation.strip_html(input_string,keep_tag_content)
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign strip_margin
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_strip_margin(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_strip_margin), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_strip_margin'.encode(), CEntryPoint_strip_margin)

def EntryPoint_strip_margin(input_string):
	try:
		# call function
		ret_0 = manipulation.strip_margin(input_string)
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)


# Call to foreign uuid4
@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_uuid4(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint_uuid4), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_uuid4'.encode(), CEntryPoint_uuid4)

def EntryPoint_uuid4():
	try:
		# call function
		ret_0 = manipulation.uuid4()
		
		ret_val_types = (4194304,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)





@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_InvalidInputError_InvalidInputError(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint_InvalidInputError_InvalidInputError), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_InvalidInputError_InvalidInputError'.encode(), CEntryPoint_InvalidInputError_InvalidInputError)

def EntryPoint_InvalidInputError_InvalidInputError(input_data):
	try:
		# call constructor
		ret_0 = manipulation.InvalidInputError(input_data)
		
		
		ret_val_types = (32768,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)







@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint_InvalidInputError_ReleaseInvalidInputError(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint_InvalidInputError_ReleaseInvalidInputError), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint_InvalidInputError_ReleaseInvalidInputError'.encode(), CEntryPoint_InvalidInputError_ReleaseInvalidInputError)

def EntryPoint_InvalidInputError_ReleaseInvalidInputError(this_instance):
	try:
		# xcall release object
		
		python_plugin_handle.release_object(this_instance)
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint___RomanNumbers___RomanNumbers(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint___RomanNumbers___RomanNumbers), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint___RomanNumbers___RomanNumbers'.encode(), CEntryPoint___RomanNumbers___RomanNumbers)

def EntryPoint___RomanNumbers___RomanNumbers():
	try:
		# call constructor
		ret_0 = manipulation.__RomanNumbers()
		
		
		ret_val_types = (32768,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)







@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint___RomanNumbers_Release__RomanNumbers(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint___RomanNumbers_Release__RomanNumbers), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint___RomanNumbers_Release__RomanNumbers'.encode(), CEntryPoint___RomanNumbers_Release__RomanNumbers)

def EntryPoint___RomanNumbers_Release__RomanNumbers(this_instance):
	try:
		# xcall release object
		
		python_plugin_handle.release_object(this_instance)
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint___StringCompressor___StringCompressor(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_no_params_ret(py_object(EntryPoint___StringCompressor___StringCompressor), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint___StringCompressor___StringCompressor'.encode(), CEntryPoint___StringCompressor___StringCompressor)

def EntryPoint___StringCompressor___StringCompressor():
	try:
		# call constructor
		ret_0 = manipulation.__StringCompressor()
		
		
		ret_val_types = (32768,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)







@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint___StringCompressor_Release__StringCompressor(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint___StringCompressor_Release__StringCompressor), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint___StringCompressor_Release__StringCompressor'.encode(), CEntryPoint___StringCompressor_Release__StringCompressor)

def EntryPoint___StringCompressor_Release__StringCompressor(this_instance):
	try:
		# xcall release object
		
		python_plugin_handle.release_object(this_instance)
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)




@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint___StringFormatter___StringFormatter(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint___StringFormatter___StringFormatter), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint___StringFormatter___StringFormatter'.encode(), CEntryPoint___StringFormatter___StringFormatter)

def EntryPoint___StringFormatter___StringFormatter(input_string):
	try:
		# call constructor
		ret_0 = manipulation.__StringFormatter(input_string)
		
		
		ret_val_types = (32768,)

		return ( None, ret_val_types , ret_0)

	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)





@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint___StringFormatter_format(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_ret(py_object(EntryPoint___StringFormatter_format), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint___StringFormatter_format'.encode(), CEntryPoint___StringFormatter_format)

def EntryPoint___StringFormatter_format(this_instance):
	try:
		# call method
		ret_0 = this_instance.format()
		
		
		ret_val_types = (4096,)

		return ( None, ret_val_types , ret_0)
		
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)
	



@CFUNCTYPE(None, c_void_p, POINTER(c_char_p), POINTER(c_ulonglong))
def CEntryPoint___StringFormatter_Release__StringFormatter(cdts, out_err, out_err_len):
	global python_plugin_handle
	python_plugin_handle.xcall_params_no_ret(py_object(EntryPoint___StringFormatter_Release__StringFormatter), c_void_p(cdts), out_err, out_err_len)
python_plugin_handle.set_entrypoint('EntryPoint___StringFormatter_Release__StringFormatter'.encode(), CEntryPoint___StringFormatter_Release__StringFormatter)

def EntryPoint___StringFormatter_Release__StringFormatter(this_instance):
	try:
		# xcall release object
		
		python_plugin_handle.release_object(this_instance)
	except Exception as e:
		errdata = traceback.format_exception(*sys.exc_info())
		return ('\n'.join(errdata),)





